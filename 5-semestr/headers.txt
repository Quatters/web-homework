**response headers**

content-length - размер полученного клиентом объекта в байтиках. Так, например, рандомная картинка 50x50 из ВК весит 3257 байт.

content-type - указывает клиенту, какого типа данные пришли. Вообще, браузер и сам может попытаться определить тип контента, однако MDN говорит, что делает он это не всегда адекватно. Чтобы предотвратить такое поведение, используется следующий заголовок.

x-content-type-options - заголовок с единственным возможным значением: nosniff (не нюхать). Указывает браузеру, что типы, определенные в content-type должны соблюдаться и не изменяться.

request-id - как я понял, этот заголовок хранит сгенерированный guid клиентом, отправленный на сервер для индентификации пользователя. Найден на сервере с asp.net, по всей видимости это приколюха микромягких.

expires - содержит значение времени, при достижении которого ответ сервера станет устаревшим. Принимает также значение -1, т.е. ответ может быть бессрочным. 

cache-control - содержит инструкции по кэшированию. Здесь и настройки приватности (public, private), и валидации (no-cache, only-if-cached), и, разумеется, управление временем жизни (max-age, min-fresh, и т.д.).

server - указывает, что за сервер прислал нам открытку. Интересно, что разные ответы с ютуба иногда дают значения sffe, а иногда fife. Что, в принципе, логично, учитывая его масштабы. А еще они используют HTTP/3. Крутые ребята.

etag - хранит ключик, определяющий версию запрашиваемого ресурса. Позволяет эффективно использовать кэширование: сервер отправит новый ответ только в том случае, если значение etag из кэша отлично от значения на сервере.

last-modified - содержит дату и время (относительно сервера), в которую запрашиваемый ресурс был последний раз изменен. Похож на etag, но менее надежен, вследствие чего используется как резервный механизм.

strict-transport-security - указывает браузеру, что доступ к сайту должен осуществляться только по https. В качестве значения содержит время, в течении которого браузер должен помнить, что надо бы перейти на https.



**request headers**

Sec-Fetch-Mode - содержит значение типа RequestMode, которое позволяет серверу различать, откуда пришел запрос и управлять доступом клиента. Входит в группу заголовков FetchMetadata, основная цель которых - защита от cross-site атак.

Accept-Language - содержит информацию о том, на каком языке клиент хочет получить страницу. Хранит несколько локалей, упорядоченных по предпочтительности. В основном формируется браузером исходя из используемого клиентом языка интерфейса.

User-Agent - сообщает серверу, что за софт использует клиент. Здесь лежит название браузера, его движка, ОС и т.д.

Connection - определяет, нужно ли оставить соединение с сервером активным после завершения запроса. Так, если в значении лежит keep-alive, то последующие обращения будут отправляться на тот же сервер. А вот значение по умолчанию close закрывает соединение.

If-Modified-Since - делает запрос условным: если запрошенный ресурс был изменен после указанной даты, то сервер отправит тот же ресурс со статусом 200, в противном случае получим 304 (Not Modified).

Authorization - содержит схему и токен авторизации пользователя для доступа к защищенному контенту.

Accept-Encoding - указывает серверу, какую кодировку контента (алгоритм сжатия) понимает клиент. Даже если клиент и сервер поддерживают одни и те же алгоритмы сжатия, возможна ситуация, когда последний решит не сжимать контент (например, если сервер перегружен или контент уже был сжат).

Host - содержит домен, для которого предназначен запрос. Получим по голове (ответ 400), если запрос не будет содержать этого заголовка или их будет больше одного.

Origin - а вот тут, казалось бы, тоже самое, но не совсем: в отличие от Host, он необязателен, а значение Origin есть домен, откуда пришел запрос. Вообще, этот заголовок включается, если имеем дело с cross-origin запросами. Так, например, в ВК можно увидеть Origin: https://vk.com, а Host: top-fwz1.mail.ru.

Referer - содержит URL страницы, из которой пришел клиент на запрашиваемую страницу. Используется сервером для анализа данных и оптимизации кэширования.





